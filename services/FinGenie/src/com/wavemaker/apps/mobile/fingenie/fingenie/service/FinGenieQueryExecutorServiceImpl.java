/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/

package com.wavemaker.apps.mobile.fingenie.fingenie.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.HashMap;
import java.util.Map;
import java.util.Collections;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.wavemaker.runtime.data.model.CustomQuery;
import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;
import com.wavemaker.runtime.data.exception.QueryParameterMismatchException;

@Service
public class FinGenieQueryExecutorServiceImpl implements FinGenieQueryExecutorService {
	private static final Logger LOGGER = LoggerFactory.getLogger(FinGenieQueryExecutorServiceImpl.class);

	@Autowired
	@Qualifier("FinGenieWMQueryExecutor")
	private WMQueryExecutor queryExecutor;

	@Transactional(value = "FinGenieTransactionManager")
	@Override
	public Page<Object> executeExecuteHomeLoans(Pageable pageable)
	throws QueryParameterMismatchException{
        Map<String, Object> params = new HashMap<String, Object>();
        return queryExecutor.executeNamedQuery("ExecuteHomeLoans", params, pageable);
	}
	@Transactional(value = "FinGenieTransactionManager")
	@Override
	public Page<Object> executeSelectedOfferDetails(Pageable pageable, java.lang.Integer data)
	throws QueryParameterMismatchException{
        Map<String, Object> params = new HashMap<String, Object>();
        params.put("data", data);
        return queryExecutor.executeNamedQuery("SelectedOfferDetails", params, pageable);
	}

	@Transactional(value = "FinGenieTransactionManager")
	@Override
	public Page<Object> executeWMCustomQuerySelect(CustomQuery query, Pageable pageable) {
	    return queryExecutor.executeCustomQuery(query, pageable);
	}

	@Transactional(value = "FinGenieTransactionManager")
    @Override
    public int executeWMCustomQueryUpdate(CustomQuery query) {
        return queryExecutor.executeCustomQueryForUpdate(query);
    }
}

