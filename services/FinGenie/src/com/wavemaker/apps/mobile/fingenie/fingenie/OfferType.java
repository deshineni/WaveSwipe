/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/
package com.wavemaker.apps.mobile.fingenie.fingenie;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OfferType generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`OFFER_TYPE`")
public class OfferType implements Serializable {

    private Integer offerTypeId;
    private String offerType;
    private List<Offer> offers = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`OFFER_TYPE_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getOfferTypeId() {
        return this.offerTypeId;
    }

    public void setOfferTypeId(Integer offerTypeId) {
        this.offerTypeId = offerTypeId;
    }

    @Column(name = "`OFFER_TYPE`", nullable = true, length = 255)
    public String getOfferType() {
        return this.offerType;
    }

    public void setOfferType(String offerType) {
        this.offerType = offerType;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "offerType")
    public List<Offer> getOffers() {
        return this.offers;
    }

    public void setOffers(List<Offer> offers) {
        this.offers = offers;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof OfferType)) return false;
        final OfferType offerTypeInstance = (OfferType) o;
        return Objects.equals(getOfferTypeId(), offerTypeInstance.getOfferTypeId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getOfferTypeId());
    }
}

